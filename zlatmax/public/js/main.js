/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("window.addEventListener('DOMContentLoaded', function () {\n\t'use strict';\n    const spollers = __webpack_require__(/*! ./module/spollers.js */ \"./src/js/module/spollers.js\");\n    const documentActions = __webpack_require__(/*! ./module/catalogMenu.js */ \"./src/js/module/catalogMenu.js\");\n    const menuBlocks = __webpack_require__(/*! ./module/menuBlocks.js */ \"./src/js/module/menuBlocks.js\");\n    const menuButton = __webpack_require__(/*! ./module/menuButton.js */ \"./src/js/module/menuButton.js\");\n    const dynamicAdapt = __webpack_require__(/*! ./module/dynamicAdapt.js */ \"./src/js/module/dynamicAdapt.js\");\n    \n    spollers();\n    menuBlocks();\n    menuButton();\n    dynamicAdapt();\n    \n    document.addEventListener('click', documentActions);\n});\n\n\n//# sourceURL=webpack://gulp-codequest/./src/js/main.js?");

/***/ }),

/***/ "./src/js/module/catalogMenu.js":
/*!**************************************!*\
  !*** ./src/js/module/catalogMenu.js ***!
  \**************************************/
/***/ (function(module) {

eval("module.exports  = (e) => {\n    const targetElement = e.target;\n\n    if(targetElement.closest('[data-parent]')) {\n        e.preventDefault();\n\n        const subMenuId = targetElement.dataset.parent ? targetElement.dataset.parent : null;\n        const subMenu = document.querySelector(`[data-submenu=\"${subMenuId}\"]`);\n\n        if(subMenu) {\n            const activeLink = document.querySelector('.sub-menu-active');\n            const activeBlock = document.querySelector('.sub-menu-open');\n\n            if(activeLink && activeLink !== targetElement) {\n                activeLink.classList.remove('sub-menu-active');\n                activeBlock.classList.remove('sub-menu-open');\n                document.documentElement.classList.remove('sub-menu-open');\n            }\n\n            document.documentElement.classList.toggle('sub-menu-open');\n            targetElement.classList.toggle('sub-menu-active');\n            subMenu.classList.toggle('sub-menu-open');\n            \n        } else {\n            console.log(\"Нет такого подменю\");\n        }\n    }\n\n    if(targetElement.closest('.menu-top-header__link_catalog')) {\n        e.preventDefault();\n        document.documentElement.classList.add('catalog-open');\n    }\n\n    if(targetElement.closest('.menu-catalog__back')) {\n        e.preventDefault();\n        document.documentElement.classList.remove('catalog-open');\n\n        document.querySelector('.sub-menu-active') ? document.querySelector('.sub-menu-active').classList.remove('sub-menu-active') : null;\n        document.querySelector('.sub-menu-open') ? document.querySelector('.sub-menu-open').classList.remove('sub-menu-open') : null;\n\n        document.documentElement.classList.remove('sub-catalog-open');\n    }\n\n    if(targetElement.closest('.sub-menu-catalog__back')) {\n        e.preventDefault();\n\n        document.documentElement.classList.remove('sub-menu-open');\n        document.querySelector('.sub-menu-active') ? document.querySelector('.sub-menu-active').classList.remove('sub-menu-active') : null;\n        document.querySelector('.sub-menu-open') ? document.querySelector('.sub-menu-open').classList.remove('sub-menu-open') : null;\n    }\n};\n\n//# sourceURL=webpack://gulp-codequest/./src/js/module/catalogMenu.js?");

/***/ }),

/***/ "./src/js/module/dynamicAdapt.js":
/*!***************************************!*\
  !*** ./src/js/module/dynamicAdapt.js ***!
  \***************************************/
/***/ (function(module) {

eval("module.exports  = () => {\r\n\r\n\tfunction DynamicAdapt(type) {\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tDynamicAdapt.prototype.init = function () {\r\n\t\tconst _this = this;\r\n\t\t// массив объектов\r\n\t\tthis.оbjects = [];\r\n\t\tthis.daClassname = \"_dynamic_adapt_\";\r\n\t\t// массив DOM-элементов\r\n\t\tthis.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n\t\t// наполнение оbjects объктами\r\n\t\tfor (let i = 0; i < this.nodes.length; i++) {\r\n\t\t\tconst node = this.nodes[i];\r\n\t\t\tconst data = node.dataset.da.trim();\r\n\t\t\tconst dataArray = data.split(\",\");\r\n\t\t\tconst оbject = {};\r\n\t\t\tоbject.element = node;\r\n\t\t\tоbject.parent = node.parentNode;\r\n\t\t\tоbject.destination = document.querySelector(dataArray[0].trim());\r\n\t\t\tоbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n\t\t\tоbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n\t\t\tоbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n\t\t\tthis.оbjects.push(оbject);\r\n\t\t}\r\n\r\n\t\tthis.arraySort(this.оbjects);\r\n\r\n\t\t// массив уникальных медиа-запросов\r\n\t\tthis.mediaQueries = Array.prototype.map.call(this.оbjects, function (item) {\r\n\t\t\treturn '(' + this.type + \"-width: \" + item.breakpoint + \"px),\" + item.breakpoint;\r\n\t\t}, this);\r\n\t\tthis.mediaQueries = Array.prototype.filter.call(this.mediaQueries, function (item, index, self) {\r\n\t\t\treturn Array.prototype.indexOf.call(self, item) === index;\r\n\t\t});\r\n\r\n\t\t// навешивание слушателя на медиа-запрос\r\n\t\t// и вызов обработчика при первом запуске\r\n\t\tfor (let i = 0; i < this.mediaQueries.length; i++) {\r\n\t\t\tconst media = this.mediaQueries[i];\r\n\t\t\tconst mediaSplit = String.prototype.split.call(media, ',');\r\n\t\t\tconst matchMedia = window.matchMedia(mediaSplit[0]);\r\n\t\t\tconst mediaBreakpoint = mediaSplit[1];\r\n\r\n\t\t\t// массив объектов с подходящим брейкпоинтом\r\n\t\t\tconst оbjectsFilter = Array.prototype.filter.call(this.оbjects, function (item) {\r\n\t\t\t\treturn item.breakpoint === mediaBreakpoint;\r\n\t\t\t});\r\n\t\t\tmatchMedia.addListener(function () {\r\n\t\t\t\t_this.mediaHandler(matchMedia, оbjectsFilter);\r\n\t\t\t});\r\n\t\t\tthis.mediaHandler(matchMedia, оbjectsFilter);\r\n\t\t}\r\n\t};\r\n\r\n\tDynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n\t\tif (matchMedia.matches) {\r\n\t\t\tfor (let i = 0; i < оbjects.length; i++) {\r\n\t\t\t\tconst оbject = оbjects[i];\r\n\t\t\t\tоbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n\t\t\t\tthis.moveTo(оbject.place, оbject.element, оbject.destination);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < оbjects.length; i++) {\r\n\t\t\t\tconst оbject = оbjects[i];\r\n\t\t\t\tif (оbject.element.classList.contains(this.daClassname)) {\r\n\t\t\t\t\tthis.moveBack(оbject.parent, оbject.element, оbject.index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Функция перемещения\r\n\tDynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n\t\telement.classList.add(this.daClassname);\r\n\t\tif (place === 'last' || place >= destination.children.length) {\r\n\t\t\tdestination.insertAdjacentElement('beforeend', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (place === 'first') {\r\n\t\t\tdestination.insertAdjacentElement('afterbegin', element);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdestination.children[place].insertAdjacentElement('beforebegin', element);\r\n\t}\r\n\r\n\t// Функция возврата\r\n\tDynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n\t\telement.classList.remove(this.daClassname);\r\n\t\tif (parent.children[index] !== undefined) {\r\n\t\t\tparent.children[index].insertAdjacentElement('beforebegin', element);\r\n\t\t} else {\r\n\t\t\tparent.insertAdjacentElement('beforeend', element);\r\n\t\t}\r\n\t}\r\n\r\n\t// Функция получения индекса внутри родителя\r\n\tDynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n\t\tconst array = Array.prototype.slice.call(parent.children);\r\n\t\treturn Array.prototype.indexOf.call(array, element);\r\n\t};\r\n\r\n\t// Функция сортировки массива по breakpoint и place \r\n\t// по возрастанию для this.type = min\r\n\t// по убыванию для this.type = max\r\n\tDynamicAdapt.prototype.arraySort = function (arr) {\r\n\t\tif (this.type === \"min\") {\r\n\t\t\tArray.prototype.sort.call(arr, function (a, b) {\r\n\t\t\t\tif (a.breakpoint === b.breakpoint) {\r\n\t\t\t\t\tif (a.place === b.place) {\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (a.place === \"first\" || b.place === \"last\") {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (a.place === \"last\" || b.place === \"first\") {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn a.place - b.place;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn a.breakpoint - b.breakpoint;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tArray.prototype.sort.call(arr, function (a, b) {\r\n\t\t\t\tif (a.breakpoint === b.breakpoint) {\r\n\t\t\t\t\tif (a.place === b.place) {\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (a.place === \"first\" || b.place === \"last\") {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (a.place === \"last\" || b.place === \"first\") {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn b.place - a.place;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn b.breakpoint - a.breakpoint;\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst da = new DynamicAdapt(\"max\");\r\n\tda.init();\r\n}\n\n//# sourceURL=webpack://gulp-codequest/./src/js/module/dynamicAdapt.js?");

/***/ }),

/***/ "./src/js/module/menuBlocks.js":
/*!*************************************!*\
  !*** ./src/js/module/menuBlocks.js ***!
  \*************************************/
/***/ (function(module) {

eval("module.exports  = () => {\n    const menuBlocks = document.querySelectorAll('.sub-menu-catalog__block');\n\n    if(menuBlocks.length) {\n        menuBlocks.forEach(menuBlock => {\n            const menuBlockItems = menuBlock.querySelectorAll('.sub-menu-catalog__category').length;\n            menuBlock.classList.add(`sub-menu-catalog__block_${menuBlockItems}`);\n        });\n    }\n}\n\n//# sourceURL=webpack://gulp-codequest/./src/js/module/menuBlocks.js?");

/***/ }),

/***/ "./src/js/module/menuButton.js":
/*!*************************************!*\
  !*** ./src/js/module/menuButton.js ***!
  \*************************************/
/***/ (function(module) {

eval("module.exports  = () => {\n    const menuButton = document.querySelector('.icon-menu');\n    const menuBody = document.querySelector('.menu__body');\n    let openMenu = false;\n\n    menuButton.addEventListener('click', () => {\n        if(!openMenu) {\n            menuButton.classList.add('menu-open');\n            menuBody.classList.add('menu-open');\n            openMenu = true;\n        } else {\n            menuButton.classList.remove('menu-open');\n            menuBody.classList.remove('menu-open');\n            openMenu = false;\n\n            if (document.documentElement.classList.contains('catalog-open')) {\n                document.documentElement.classList.remove('catalog-open')\n            }\n\n            if (document.documentElement.classList.contains('sub-menu-open')) {\n                document.documentElement.classList.remove('sub-menu-open');\n            }\n        }\n    })\n\n};\n\n//# sourceURL=webpack://gulp-codequest/./src/js/module/menuButton.js?");

/***/ }),

/***/ "./src/js/module/spollers.js":
/*!***********************************!*\
  !*** ./src/js/module/spollers.js ***!
  \***********************************/
/***/ (function(module) {

eval("module.exports  = () => {\n    const spollersArray = document.querySelectorAll('[data-spollers]');\n    if (spollersArray.length > 0) {\n        // Получение обычных слойлеров\n        const spollersRegular = Array.from(spollersArray).filter(function (item, index, self) {\n            return !item.dataset.spollers.split(\",\")[0];\n        });\n        // Инициализация обычных слойлеров\n        if (spollersRegular.length > 0) {\n            initSpollers(spollersRegular);\n        }\n\n        // Получение слойлеров с медиа запросами\n        const spollersMedia = Array.from(spollersArray).filter(function (item, index, self) {\n            return item.dataset.spollers.split(\",\")[0];\n        });\n\n        // Инициализация слойлеров с медиа запросами\n        if (spollersMedia.length > 0) {\n            const breakpointsArray = [];\n            spollersMedia.forEach(item => {\n                const params = item.dataset.spollers;\n                const breakpoint = {};\n                const paramsArray = params.split(\",\");\n                breakpoint.value = paramsArray[0];\n                breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : \"max\";\n                breakpoint.item = item;\n                breakpointsArray.push(breakpoint);\n            });\n\n            // Получаем уникальные брейкпоинты\n            let mediaQueries = breakpointsArray.map(function (item) {\n                return '(' + item.type + \"-width: \" + item.value + \"px),\" + item.value + ',' + item.type;\n            });\n            mediaQueries = mediaQueries.filter(function (item, index, self) {\n                return self.indexOf(item) === index;\n            });\n\n            // Работаем с каждым брейкпоинтом\n            mediaQueries.forEach(breakpoint => {\n                const paramsArray = breakpoint.split(\",\");\n                const mediaBreakpoint = paramsArray[1];\n                const mediaType = paramsArray[2];\n                const matchMedia = window.matchMedia(paramsArray[0]);\n\n                // Объекты с нужными условиями\n                const spollersArray = breakpointsArray.filter(function (item) {\n                    if (item.value === mediaBreakpoint && item.type === mediaType) {\n                        return true;\n                    }\n                });\n                // Событие\n                matchMedia.addListener(function () {\n                    initSpollers(spollersArray, matchMedia);\n                });\n                initSpollers(spollersArray, matchMedia);\n            });\n        }\n        // Инициализация\n        function initSpollers(spollersArray, matchMedia = false) {\n            spollersArray.forEach(spollersBlock => {\n                spollersBlock = matchMedia ? spollersBlock.item : spollersBlock;\n                if (matchMedia.matches || !matchMedia) {\n                    spollersBlock.classList.add('_init');\n                    initSpollerBody(spollersBlock);\n                    spollersBlock.addEventListener(\"click\", setSpollerAction);\n                } else {\n                    spollersBlock.classList.remove('_init');\n                    initSpollerBody(spollersBlock, false);\n                    spollersBlock.removeEventListener(\"click\", setSpollerAction);\n                }\n            });\n        }\n        // Работа с контентом\n        function initSpollerBody(spollersBlock, hideSpollerBody = true) {\n            const spollerTitles = spollersBlock.querySelectorAll('[data-spoller]');\n            if (spollerTitles.length > 0) {\n                spollerTitles.forEach(spollerTitle => {\n                    if (hideSpollerBody) {\n                        spollerTitle.removeAttribute('tabindex');\n                        if (!spollerTitle.classList.contains('_active')) {\n                            spollerTitle.nextElementSibling.hidden = true;\n                        }\n                    } else {\n                        spollerTitle.setAttribute('tabindex', '-1');\n                        spollerTitle.nextElementSibling.hidden = false;\n                    }\n                });\n            }\n        }\n        function setSpollerAction(e) {\n            const el = e.target;\n            if (el.hasAttribute('data-spoller') || el.closest('[data-spoller]')) {\n                const spollerTitle = el.hasAttribute('data-spoller') ? el : el.closest('[data-spoller]');\n                const spollersBlock = spollerTitle.closest('[data-spollers]');\n                const oneSpoller = spollersBlock.hasAttribute('data-one-spoller') ? true : false;\n                if (!spollersBlock.querySelectorAll('._slide').length) {\n                    if (oneSpoller && !spollerTitle.classList.contains('_active')) {\n                        hideSpollersBody(spollersBlock);\n                    }\n                    spollerTitle.classList.toggle('_active');\n                    _slideToggle(spollerTitle.nextElementSibling, 500);\n                }\n                e.preventDefault();\n            }\n        }\n        function hideSpollersBody(spollersBlock) {\n            const spollerActiveTitle = spollersBlock.querySelector('[data-spoller]._active');\n            if (spollerActiveTitle) {\n                spollerActiveTitle.classList.remove('_active');\n                _slideUp(spollerActiveTitle.nextElementSibling, 500);\n            }\n        }\n    }\n\n    //SlideToggle\n    let _slideUp = (target, duration = 500) => {\n        if (!target.classList.contains('_slide')) {\n            target.classList.add('_slide');\n            target.style.transitionProperty = 'height, margin, padding';\n            target.style.transitionDuration = duration + 'ms';\n            target.style.height = target.offsetHeight + 'px';\n            target.offsetHeight;\n            target.style.overflow = 'hidden';\n            target.style.height = 0;\n            target.style.paddingTop = 0;\n            target.style.paddingBottom = 0;\n            target.style.marginTop = 0;\n            target.style.marginBottom = 0;\n            window.setTimeout(() => {\n                target.hidden = true;\n                target.style.removeProperty('height');\n                target.style.removeProperty('padding-top');\n                target.style.removeProperty('padding-bottom');\n                target.style.removeProperty('margin-top');\n                target.style.removeProperty('margin-bottom');\n                target.style.removeProperty('overflow');\n                target.style.removeProperty('transition-duration');\n                target.style.removeProperty('transition-property');\n                target.classList.remove('_slide');\n            }, duration);\n        }\n    }\n    let _slideDown = (target, duration = 500) => {\n        if (!target.classList.contains('_slide')) {\n            target.classList.add('_slide');\n            if (target.hidden) {\n                target.hidden = false;\n            }\n            let height = target.offsetHeight;\n            target.style.overflow = 'hidden';\n            target.style.height = 0;\n            target.style.paddingTop = 0;\n            target.style.paddingBottom = 0;\n            target.style.marginTop = 0;\n            target.style.marginBottom = 0;\n            target.offsetHeight;\n            target.style.transitionProperty = \"height, margin, padding\";\n            target.style.transitionDuration = duration + 'ms';\n            target.style.height = height + 'px';\n            target.style.removeProperty('padding-top');\n            target.style.removeProperty('padding-bottom');\n            target.style.removeProperty('margin-top');\n            target.style.removeProperty('margin-bottom');\n            window.setTimeout(() => {\n                target.style.removeProperty('height');\n                target.style.removeProperty('overflow');\n                target.style.removeProperty('transition-duration');\n                target.style.removeProperty('transition-property');\n                target.classList.remove('_slide');\n            }, duration);\n        }\n    }\n    let _slideToggle = (target, duration = 500) => {\n        if (target.hidden) {\n            return _slideDown(target, duration);\n        } else {\n            return _slideUp(target, duration);\n        }\n    }\n\n};\n\n//# sourceURL=webpack://gulp-codequest/./src/js/module/spollers.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;